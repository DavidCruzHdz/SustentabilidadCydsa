//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CYDSA_Sustentabilidad.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<IdsBitacora> IdsBitacora { get; set; }
        public virtual DbSet<IdsCatElementos> IdsCatElementos { get; set; }
        public virtual DbSet<IdsCatEmpresas> IdsCatEmpresas { get; set; }
        public virtual DbSet<IdsCatFactores> IdsCatFactores { get; set; }
        public virtual DbSet<IdsCatIndicadores> IdsCatIndicadores { get; set; }
        public virtual DbSet<IdsCatMediciones> IdsCatMediciones { get; set; }
        public virtual DbSet<IdsCatUnidades> IdsCatUnidades { get; set; }
        public virtual DbSet<IdsDesgloseIndicadores> IdsDesgloseIndicadores { get; set; }
        public virtual DbSet<IdsFormulas> IdsFormulas { get; set; }
        public virtual DbSet<IdsIndicadores> IdsIndicadores { get; set; }
        public virtual DbSet<IdsMediciones> IdsMediciones { get; set; }
        public virtual DbSet<IdsMensualesPorMontos> IdsMensualesPorMontos { get; set; }
        public virtual DbSet<IdsPantallasPermisos> IdsPantallasPermisos { get; set; }
        public virtual DbSet<IdsPermiso> IdsPermiso { get; set; }
        public virtual DbSet<IdsPermisosPlantas> IdsPermisosPlantas { get; set; }
        public virtual DbSet<IdsRelaciones> IdsRelaciones { get; set; }
        public virtual DbSet<IdsRol> IdsRol { get; set; }
        public virtual DbSet<IdsTareas> IdsTareas { get; set; }
        public virtual DbSet<IdsUsuario> IdsUsuario { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<IdsIndicadorAnual> IdsIndicadorAnual { get; set; }
        public virtual DbSet<IdsPantallas> IdsPantallas { get; set; }
        public virtual DbSet<IdsSubirMateriaPrima> IdsSubirMateriaPrima { get; set; }
    
        public virtual ObjectResult<ComboMediciones_Result> ComboMediciones(Nullable<int> idPlanta, Nullable<int> idAnio, Nullable<int> idMes, Nullable<int> idIndicador)
        {
            var idPlantaParameter = idPlanta.HasValue ?
                new ObjectParameter("IdPlanta", idPlanta) :
                new ObjectParameter("IdPlanta", typeof(int));
    
            var idAnioParameter = idAnio.HasValue ?
                new ObjectParameter("IdAnio", idAnio) :
                new ObjectParameter("IdAnio", typeof(int));
    
            var idMesParameter = idMes.HasValue ?
                new ObjectParameter("IdMes", idMes) :
                new ObjectParameter("IdMes", typeof(int));
    
            var idIndicadorParameter = idIndicador.HasValue ?
                new ObjectParameter("IdIndicador", idIndicador) :
                new ObjectParameter("IdIndicador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ComboMediciones_Result>("ComboMediciones", idPlantaParameter, idAnioParameter, idMesParameter, idIndicadorParameter);
        }
    
        public virtual ObjectResult<ComboPlantas_Result> ComboPlantas(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ComboPlantas_Result>("ComboPlantas", idUsuarioParameter);
        }
    
        public virtual int MedicionesDetalladas(Nullable<int> idCia, Nullable<int> idPlanta, Nullable<int> idAnio, Nullable<int> idMes)
        {
            var idCiaParameter = idCia.HasValue ?
                new ObjectParameter("IdCia", idCia) :
                new ObjectParameter("IdCia", typeof(int));
    
            var idPlantaParameter = idPlanta.HasValue ?
                new ObjectParameter("IdPlanta", idPlanta) :
                new ObjectParameter("IdPlanta", typeof(int));
    
            var idAnioParameter = idAnio.HasValue ?
                new ObjectParameter("IdAnio", idAnio) :
                new ObjectParameter("IdAnio", typeof(int));
    
            var idMesParameter = idMes.HasValue ?
                new ObjectParameter("IdMes", idMes) :
                new ObjectParameter("IdMes", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MedicionesDetalladas", idCiaParameter, idPlantaParameter, idAnioParameter, idMesParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int SpIndicadoresMonitoreoPorMes(Nullable<int> idCia, Nullable<int> idPlanta, Nullable<int> anio, Nullable<int> usuario)
        {
            var idCiaParameter = idCia.HasValue ?
                new ObjectParameter("IdCia", idCia) :
                new ObjectParameter("IdCia", typeof(int));
    
            var idPlantaParameter = idPlanta.HasValue ?
                new ObjectParameter("IdPlanta", idPlanta) :
                new ObjectParameter("IdPlanta", typeof(int));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("Anio", anio) :
                new ObjectParameter("Anio", typeof(int));
    
            var usuarioParameter = usuario.HasValue ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpIndicadoresMonitoreoPorMes", idCiaParameter, idPlantaParameter, anioParameter, usuarioParameter);
        }
    
        public virtual int SpIndicadoresMonitoreoPorMes3(Nullable<int> idPlanta, Nullable<int> anio, Nullable<int> usuario)
        {
            var idPlantaParameter = idPlanta.HasValue ?
                new ObjectParameter("IdPlanta", idPlanta) :
                new ObjectParameter("IdPlanta", typeof(int));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("Anio", anio) :
                new ObjectParameter("Anio", typeof(int));
    
            var usuarioParameter = usuario.HasValue ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpIndicadoresMonitoreoPorMes3", idPlantaParameter, anioParameter, usuarioParameter);
        }
    
        public virtual int SpIndicadoresMonitoreoPorMes4(Nullable<int> idCia, Nullable<int> idPlanta, Nullable<int> anio, Nullable<int> usuario)
        {
            var idCiaParameter = idCia.HasValue ?
                new ObjectParameter("IdCia", idCia) :
                new ObjectParameter("IdCia", typeof(int));
    
            var idPlantaParameter = idPlanta.HasValue ?
                new ObjectParameter("IdPlanta", idPlanta) :
                new ObjectParameter("IdPlanta", typeof(int));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("Anio", anio) :
                new ObjectParameter("Anio", typeof(int));
    
            var usuarioParameter = usuario.HasValue ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpIndicadoresMonitoreoPorMes4", idCiaParameter, idPlantaParameter, anioParameter, usuarioParameter);
        }
    
        public virtual int SpIndicadoresMonitoreoPorMes4BAK(Nullable<int> idCia, Nullable<int> idPlanta, Nullable<int> anio, Nullable<int> usuario)
        {
            var idCiaParameter = idCia.HasValue ?
                new ObjectParameter("IdCia", idCia) :
                new ObjectParameter("IdCia", typeof(int));
    
            var idPlantaParameter = idPlanta.HasValue ?
                new ObjectParameter("IdPlanta", idPlanta) :
                new ObjectParameter("IdPlanta", typeof(int));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("Anio", anio) :
                new ObjectParameter("Anio", typeof(int));
    
            var usuarioParameter = usuario.HasValue ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpIndicadoresMonitoreoPorMes4BAK", idCiaParameter, idPlantaParameter, anioParameter, usuarioParameter);
        }
    
        public virtual int SpIndicadoresMonitoreoPorMes6BAK(Nullable<int> idCia, Nullable<int> idPlanta, Nullable<int> anio, Nullable<int> usuario)
        {
            var idCiaParameter = idCia.HasValue ?
                new ObjectParameter("IdCia", idCia) :
                new ObjectParameter("IdCia", typeof(int));
    
            var idPlantaParameter = idPlanta.HasValue ?
                new ObjectParameter("IdPlanta", idPlanta) :
                new ObjectParameter("IdPlanta", typeof(int));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("Anio", anio) :
                new ObjectParameter("Anio", typeof(int));
    
            var usuarioParameter = usuario.HasValue ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpIndicadoresMonitoreoPorMes6BAK", idCiaParameter, idPlantaParameter, anioParameter, usuarioParameter);
        }
    
        public virtual int SpIndicadoresMonitoreoPorMesBAK(Nullable<int> idCia, Nullable<int> idPlanta, Nullable<int> anio)
        {
            var idCiaParameter = idCia.HasValue ?
                new ObjectParameter("IdCia", idCia) :
                new ObjectParameter("IdCia", typeof(int));
    
            var idPlantaParameter = idPlanta.HasValue ?
                new ObjectParameter("IdPlanta", idPlanta) :
                new ObjectParameter("IdPlanta", typeof(int));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("Anio", anio) :
                new ObjectParameter("Anio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpIndicadoresMonitoreoPorMesBAK", idCiaParameter, idPlantaParameter, anioParameter);
        }
    
        public virtual int SpMensualesPorMontos(Nullable<int> idPlanta, Nullable<int> anio, Nullable<int> usuario)
        {
            var idPlantaParameter = idPlanta.HasValue ?
                new ObjectParameter("IdPlanta", idPlanta) :
                new ObjectParameter("IdPlanta", typeof(int));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("Anio", anio) :
                new ObjectParameter("Anio", typeof(int));
    
            var usuarioParameter = usuario.HasValue ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpMensualesPorMontos", idPlantaParameter, anioParameter, usuarioParameter);
        }
    
        public virtual int SpMensualesPorMontos2_bak(Nullable<int> idCia, Nullable<int> idPlanta, Nullable<int> anio, Nullable<int> usuario)
        {
            var idCiaParameter = idCia.HasValue ?
                new ObjectParameter("IdCia", idCia) :
                new ObjectParameter("IdCia", typeof(int));
    
            var idPlantaParameter = idPlanta.HasValue ?
                new ObjectParameter("IdPlanta", idPlanta) :
                new ObjectParameter("IdPlanta", typeof(int));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("Anio", anio) :
                new ObjectParameter("Anio", typeof(int));
    
            var usuarioParameter = usuario.HasValue ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpMensualesPorMontos2_bak", idCiaParameter, idPlantaParameter, anioParameter, usuarioParameter);
        }
    
        public virtual int SpMensualesPorMontos3_bak(Nullable<int> idCia, Nullable<int> idPlanta, Nullable<int> anio, string usuario)
        {
            var idCiaParameter = idCia.HasValue ?
                new ObjectParameter("IdCia", idCia) :
                new ObjectParameter("IdCia", typeof(int));
    
            var idPlantaParameter = idPlanta.HasValue ?
                new ObjectParameter("IdPlanta", idPlanta) :
                new ObjectParameter("IdPlanta", typeof(int));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("Anio", anio) :
                new ObjectParameter("Anio", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpMensualesPorMontos3_bak", idCiaParameter, idPlantaParameter, anioParameter, usuarioParameter);
        }
    
        public virtual int SpSelIndicadoresCYDSA(Nullable<int> idPlanta, Nullable<int> mes, Nullable<int> anio)
        {
            var idPlantaParameter = idPlanta.HasValue ?
                new ObjectParameter("IdPlanta", idPlanta) :
                new ObjectParameter("IdPlanta", typeof(int));
    
            var mesParameter = mes.HasValue ?
                new ObjectParameter("Mes", mes) :
                new ObjectParameter("Mes", typeof(int));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("Anio", anio) :
                new ObjectParameter("Anio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpSelIndicadoresCYDSA", idPlantaParameter, mesParameter, anioParameter);
        }
    
        public virtual int SpSelIndicadoresCYDSA_Meses(Nullable<int> idCia, Nullable<int> idPlanta, Nullable<int> anio)
        {
            var idCiaParameter = idCia.HasValue ?
                new ObjectParameter("IdCia", idCia) :
                new ObjectParameter("IdCia", typeof(int));
    
            var idPlantaParameter = idPlanta.HasValue ?
                new ObjectParameter("IdPlanta", idPlanta) :
                new ObjectParameter("IdPlanta", typeof(int));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("Anio", anio) :
                new ObjectParameter("Anio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpSelIndicadoresCYDSA_Meses", idCiaParameter, idPlantaParameter, anioParameter);
        }
    
        public virtual int SpSelIndicadoresCYDSA2_Bak(Nullable<int> idCia, Nullable<int> idPlanta, Nullable<int> mes, Nullable<int> anio)
        {
            var idCiaParameter = idCia.HasValue ?
                new ObjectParameter("IdCia", idCia) :
                new ObjectParameter("IdCia", typeof(int));
    
            var idPlantaParameter = idPlanta.HasValue ?
                new ObjectParameter("IdPlanta", idPlanta) :
                new ObjectParameter("IdPlanta", typeof(int));
    
            var mesParameter = mes.HasValue ?
                new ObjectParameter("Mes", mes) :
                new ObjectParameter("Mes", typeof(int));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("Anio", anio) :
                new ObjectParameter("Anio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpSelIndicadoresCYDSA2_Bak", idCiaParameter, idPlantaParameter, mesParameter, anioParameter);
        }
    
        public virtual int SpSelIndicadoresCYDSA3_Bak(Nullable<int> idCia, Nullable<int> idPlanta, Nullable<int> mes, Nullable<int> anio)
        {
            var idCiaParameter = idCia.HasValue ?
                new ObjectParameter("IdCia", idCia) :
                new ObjectParameter("IdCia", typeof(int));
    
            var idPlantaParameter = idPlanta.HasValue ?
                new ObjectParameter("IdPlanta", idPlanta) :
                new ObjectParameter("IdPlanta", typeof(int));
    
            var mesParameter = mes.HasValue ?
                new ObjectParameter("Mes", mes) :
                new ObjectParameter("Mes", typeof(int));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("Anio", anio) :
                new ObjectParameter("Anio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpSelIndicadoresCYDSA3_Bak", idCiaParameter, idPlantaParameter, mesParameter, anioParameter);
        }
    
        public virtual int SpSelIndicadoresCYDSA4(Nullable<int> idCia, Nullable<int> idPlanta, Nullable<int> mes, Nullable<int> anio)
        {
            var idCiaParameter = idCia.HasValue ?
                new ObjectParameter("IdCia", idCia) :
                new ObjectParameter("IdCia", typeof(int));
    
            var idPlantaParameter = idPlanta.HasValue ?
                new ObjectParameter("IdPlanta", idPlanta) :
                new ObjectParameter("IdPlanta", typeof(int));
    
            var mesParameter = mes.HasValue ?
                new ObjectParameter("Mes", mes) :
                new ObjectParameter("Mes", typeof(int));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("Anio", anio) :
                new ObjectParameter("Anio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpSelIndicadoresCYDSA4", idCiaParameter, idPlantaParameter, mesParameter, anioParameter);
        }
    
        public virtual int SpSelIndicadoresCYDSA5_BAK(Nullable<int> idCia, Nullable<int> idPlanta, Nullable<int> mes, Nullable<int> anio)
        {
            var idCiaParameter = idCia.HasValue ?
                new ObjectParameter("IdCia", idCia) :
                new ObjectParameter("IdCia", typeof(int));
    
            var idPlantaParameter = idPlanta.HasValue ?
                new ObjectParameter("IdPlanta", idPlanta) :
                new ObjectParameter("IdPlanta", typeof(int));
    
            var mesParameter = mes.HasValue ?
                new ObjectParameter("Mes", mes) :
                new ObjectParameter("Mes", typeof(int));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("Anio", anio) :
                new ObjectParameter("Anio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpSelIndicadoresCYDSA5_BAK", idCiaParameter, idPlantaParameter, mesParameter, anioParameter);
        }
    
        public virtual int SpTranspasoEnergiaSES(Nullable<int> idPlanta, Nullable<int> anio, Nullable<int> usuario)
        {
            var idPlantaParameter = idPlanta.HasValue ?
                new ObjectParameter("IdPlanta", idPlanta) :
                new ObjectParameter("IdPlanta", typeof(int));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("Anio", anio) :
                new ObjectParameter("Anio", typeof(int));
    
            var usuarioParameter = usuario.HasValue ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpTranspasoEnergiaSES", idPlantaParameter, anioParameter, usuarioParameter);
        }
    }
}
