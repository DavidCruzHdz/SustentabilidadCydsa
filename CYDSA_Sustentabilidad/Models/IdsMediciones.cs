//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CYDSA_Sustentabilidad.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;

    public partial class IdsMediciones
    {
        public int IdsId { get; set; }
        [DisplayName("Planta")]
        public int IdsIdEmpresa { get; set; }
        [DisplayName("Mes")]
        public int IdsMes { get; set; }
        [DisplayName("Año")]
        public int IdsAnio { get; set; }
        [DisplayName("Indicadores")]
        public int IdsIdIndicador { get; set; }
        [DisplayName("Mediciones")]
        public int IdsIdMedicion { get; set; }
        [DisplayName("Elementos")]
        public int IdsIdElemento { get; set; }
        [Required]
        [DisplayName("Valores")]
        //[DisplayFormat(DataFormatString = "{0:##,###,###.###}")]
        [DisplayFormat(DataFormatString = "{0:N3}")]
        //[Range(0, float.MaxValue, ErrorMessage = "La cantidad valor {0} debe ser numérico.")]
        //[RegularExpression(@"[0-9]*\.?[0-9]*", ErrorMessage = "La cantidad debe contener sólo números y 3 decimales solamente.")]
        //[Range(typeof(float), "0.000", "999999999.000")]
        [RegularExpression(@"[0-9]*\.?[0-9]*", ErrorMessage = "La cantidad debe contener sólo números y 3 decimales solamente.")]
        //[Range(0, float.MaxValue, ErrorMessage = "Square Feet must be a positive number")]
        //[PosNumberNoZero(ErrorMessage = "need a positive number, bigger than 0")]
        //[RegularExpression("^[0-9]*$", ErrorMessage = "UPRN must be numeric")]
        public double IdsValorCalculado { get; set; }
        [DisplayName("Unidad")]
        public int IdsIdUnidad { get; set; }
        [DisplayName("Estatus del Mes")]
        public bool IdsCierreMes { get; set; }
        public Nullable<System.DateTime> IdsFechaAlta { get; set; }
        public Nullable<int> IdsUsuarioAlta { get; set; }
        [DisplayName("Cambio")]
        public Nullable<System.DateTime> IdsFechaCambio { get; set; }
        [DisplayName("Autorizo")]
        public Nullable<int> IdsUsuarioCambio { get; set; }
        public Nullable<bool> IdEstatus { get; set; }
        [DisplayFormat(DataFormatString = "{0:N2}")]
        public Nullable<decimal> IdsPrecioDolar { get; set; }
        public string IdsNotasAdicionales { get; set; }
        public string IdsTipoDato { get; set; }

        public virtual IdsCatElementos IdsCatElementos { get; set; }
        public virtual IdsCatEmpresas IdsCatEmpresas { get; set; }
        public virtual IdsCatEmpresas IdsCatEmpresas1 { get; set; }
        public virtual IdsCatIndicadores IdsCatIndicadores { get; set; }
        public virtual IdsCatMediciones IdsCatMediciones { get; set; }
        public virtual IdsCatUnidades IdsCatUnidades { get; set; }
    }
}
